Terminals unused in grammar

    _FUNCTION


Grammar

    0 $accept: program $end

    1 program: function_list
    2        | %empty

    3 function_list: function
    4              | function_list function

    5 $@1: %empty

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    7 parameter: %empty
    8          | _TYPE _ID
    9          | parameter _COMMA _TYPE _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 $@2: %empty

   14 variable: _TYPE $@2 var_ids _SEMI

   15 var_ids: _ID
   16        | var_ids _COMMA _ID
   17        | var_ids _COMMA _ID _ASSIGN num_exp
   18        | _ID _ASSIGN num_exp

   19 statement_list: %empty
   20               | statement_list statement

   21 statement: compound_statement
   22          | assign_statement
   23          | if_else_statement
   24          | return_statement
   25          | postinc_statement
   26          | para_statement
   27          | switch_statement

   28 compound_statement: _LBRACKET statement_list _RBRACKET

   29 assign_statement: _ID _ASSIGN num_exp _SEMI

   30 num_exp: exp
   31        | num_exp _OP exp

   32 exp: literal
   33    | postinc_var
   34    | function_call
   35    | _ID
   36    | _LPAREN num_exp _RPAREN

   37 literal: _INT_NUM
   38        | _UINT_NUM

   39 $@3: %empty

   40 function_call: _ID $@3 _LPAREN argument _RPAREN

   41 argument: %empty
   42         | num_exp
   43         | argument _COMMA num_exp

   44 if_else_statement: _IF _LPAREN relation _RPAREN statement
   45                  | _IF _LPAREN relation _RPAREN statement _ELSE statement

   46 relation: num_exp _RELOP num_exp

   47 return_statement: _RETURN num_exp _SEMI
   48                 | _RETURN _SEMI

   49 postinc_statement: postinc_var _SEMI

   50 postinc_var: _ID _POSTINC

   51 $@4: %empty

   52 $@5: %empty

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

   54 $@6: %empty

   55 switch_statement: _SWITCH _LSQBR _ID _RSQBR $@6 switch_part

   56 switch_part: _LBRACKET cases _RBRACKET
   57            | _LBRACKET cases _DEFAULT _COLON statement _RBRACKET

   58 cases: case
   59      | cases case

   60 case: _CASE literal case_part

   61 case_part: _COLON statement
   62          | _COLON statement _FINISH _SEMI


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 6 8 9 14 53
    _FUNCTION (259)
    _IF (260) 44 45
    _ELSE (261) 45
    _RETURN (262) 47 48
    _PARA (263) 53
    _LPAREN (264) 6 36 40 44 45 53
    _RPAREN (265) 6 36 40 44 45 53
    _LBRACKET (266) 10 28 56 57
    _RBRACKET (267) 10 28 56 57
    _SEMI (268) 14 29 47 48 49 53 62
    _ASSIGN (269) 17 18 29 53
    _COMMA (270) 9 16 17 43
    _POSTINC (271) 50 53
    _OP <i> (272) 31
    _RELOP <i> (273) 46
    _ID <s> (274) 6 8 9 15 16 17 18 29 35 40 50 53 55
    _INT_NUM <s> (275) 37
    _UINT_NUM <s> (276) 38
    _SWITCH (277) 55
    _DEFAULT (278) 57
    _LSQBR (279) 55
    _RSQBR (280) 55
    _COLON (281) 57 61 62
    _CASE (282) 60
    _FINISH (283) 62
    ONLY_IF (284)
    NO_FINISH (285)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    program (32)
        on left: 1 2
        on right: 0
    function_list (33)
        on left: 3 4
        on right: 1 4
    function (34)
        on left: 6
        on right: 3 4
    $@1 (35)
        on left: 5
        on right: 6
    parameter (36)
        on left: 7 8 9
        on right: 6 9
    body (37)
        on left: 10
        on right: 6
    variable_list (38)
        on left: 11 12
        on right: 10 12
    variable (39)
        on left: 14
        on right: 12
    $@2 (40)
        on left: 13
        on right: 14
    var_ids (41)
        on left: 15 16 17 18
        on right: 14 16 17
    statement_list (42)
        on left: 19 20
        on right: 10 20 28
    statement (43)
        on left: 21 22 23 24 25 26 27
        on right: 20 44 45 53 57 61 62
    compound_statement (44)
        on left: 28
        on right: 21
    assign_statement (45)
        on left: 29
        on right: 22
    num_exp <i> (46)
        on left: 30 31
        on right: 17 18 29 31 36 42 43 46 47 53
    exp <i> (47)
        on left: 32 33 34 35 36
        on right: 30 31
    literal <i> (48)
        on left: 37 38
        on right: 32 60
    function_call <i> (49)
        on left: 40
        on right: 34
    $@3 (50)
        on left: 39
        on right: 40
    argument <i> (51)
        on left: 41 42 43
        on right: 40 43
    if_else_statement (52)
        on left: 44 45
        on right: 23
    relation <i> (53)
        on left: 46
        on right: 44 45 53
    return_statement (54)
        on left: 47 48
        on right: 24
    postinc_statement (55)
        on left: 49
        on right: 25
    postinc_var <i> (56)
        on left: 50
        on right: 33 49
    para_statement (57)
        on left: 53
        on right: 26
    $@4 (58)
        on left: 51
        on right: 53
    $@5 (59)
        on left: 52
        on right: 53
    switch_statement (60)
        on left: 55
        on right: 27
    $@6 (61)
        on left: 54
        on right: 55
    switch_part (62)
        on left: 56 57
        on right: 55
    cases (63)
        on left: 58 59
        on right: 56 57 59
    case (64)
        on left: 60
        on right: 58 59
    case_part (65)
        on left: 61 62
        on right: 60


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    6 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    4 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    3 function_list: function .

    $default  reduce using rule 3 (function_list)


State 5

    6 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 5 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 function_list: function_list function .

    $default  reduce using rule 4 (function_list)


State 8

    6 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    6 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 7 (parameter)

    parameter  go to state 11


State 10

    8 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    6 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body
    9 parameter: parameter . _COMMA _TYPE _ID

    _RPAREN  shift, and go to state 13
    _COMMA   shift, and go to state 14


State 12

    8 parameter: _TYPE _ID .

    $default  reduce using rule 8 (parameter)


State 13

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 15

    body  go to state 16


State 14

    9 parameter: parameter _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 17


State 15

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 16

    6 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 6 (function)


State 17

    9 parameter: parameter _COMMA _TYPE . _ID

    _ID  shift, and go to state 19


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 20

    $default  reduce using rule 19 (statement_list)

    variable        go to state 21
    statement_list  go to state 22


State 19

    9 parameter: parameter _COMMA _TYPE _ID .

    $default  reduce using rule 9 (parameter)


State 20

   14 variable: _TYPE . $@2 var_ids _SEMI

    $default  reduce using rule 13 ($@2)

    $@2  go to state 23


State 21

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 22

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   20 statement_list: statement_list . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 28
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 31
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 23

   14 variable: _TYPE $@2 . var_ids _SEMI

    _ID  shift, and go to state 40

    var_ids  go to state 41


State 24

   44 if_else_statement: _IF . _LPAREN relation _RPAREN statement
   45                  | _IF . _LPAREN relation _RPAREN statement _ELSE statement

    _LPAREN  shift, and go to state 42


State 25

   47 return_statement: _RETURN . num_exp _SEMI
   48                 | _RETURN . _SEMI

    _LPAREN    shift, and go to state 43
    _SEMI      shift, and go to state 44
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 48
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 26

   53 para_statement: _PARA . _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _LPAREN  shift, and go to state 53


State 27

   28 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 19 (statement_list)

    statement_list  go to state 54


State 28

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 29

   29 assign_statement: _ID . _ASSIGN num_exp _SEMI
   50 postinc_var: _ID . _POSTINC

    _ASSIGN   shift, and go to state 55
    _POSTINC  shift, and go to state 56


State 30

   55 switch_statement: _SWITCH . _LSQBR _ID _RSQBR $@6 switch_part

    _LSQBR  shift, and go to state 57


State 31

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 32

   21 statement: compound_statement .

    $default  reduce using rule 21 (statement)


State 33

   22 statement: assign_statement .

    $default  reduce using rule 22 (statement)


State 34

   23 statement: if_else_statement .

    $default  reduce using rule 23 (statement)


State 35

   24 statement: return_statement .

    $default  reduce using rule 24 (statement)


State 36

   25 statement: postinc_statement .

    $default  reduce using rule 25 (statement)


State 37

   49 postinc_statement: postinc_var . _SEMI

    _SEMI  shift, and go to state 58


State 38

   26 statement: para_statement .

    $default  reduce using rule 26 (statement)


State 39

   27 statement: switch_statement .

    $default  reduce using rule 27 (statement)


State 40

   15 var_ids: _ID .
   18        | _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 59

    $default  reduce using rule 15 (var_ids)


State 41

   14 variable: _TYPE $@2 var_ids . _SEMI
   16 var_ids: var_ids . _COMMA _ID
   17        | var_ids . _COMMA _ID _ASSIGN num_exp

    _SEMI   shift, and go to state 60
    _COMMA  shift, and go to state 61


State 42

   44 if_else_statement: _IF _LPAREN . relation _RPAREN statement
   45                  | _IF _LPAREN . relation _RPAREN statement _ELSE statement

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    relation       go to state 63
    postinc_var    go to state 52


State 43

   36 exp: _LPAREN . num_exp _RPAREN

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 64
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 44

   48 return_statement: _RETURN _SEMI .

    $default  reduce using rule 48 (return_statement)


State 45

   35 exp: _ID .
   40 function_call: _ID . $@3 _LPAREN argument _RPAREN
   50 postinc_var: _ID . _POSTINC

    _POSTINC  shift, and go to state 56

    _LPAREN   reduce using rule 39 ($@3)
    $default  reduce using rule 35 (exp)

    $@3  go to state 65


State 46

   37 literal: _INT_NUM .

    $default  reduce using rule 37 (literal)


State 47

   38 literal: _UINT_NUM .

    $default  reduce using rule 38 (literal)


State 48

   31 num_exp: num_exp . _OP exp
   47 return_statement: _RETURN num_exp . _SEMI

    _SEMI  shift, and go to state 66
    _OP    shift, and go to state 67


State 49

   30 num_exp: exp .

    $default  reduce using rule 30 (num_exp)


State 50

   32 exp: literal .

    $default  reduce using rule 32 (exp)


State 51

   34 exp: function_call .

    $default  reduce using rule 34 (exp)


State 52

   33 exp: postinc_var .

    $default  reduce using rule 33 (exp)


State 53

   53 para_statement: _PARA _LPAREN . _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _TYPE  shift, and go to state 68


State 54

   20 statement_list: statement_list . statement
   28 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _RBRACKET  shift, and go to state 69
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 31
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 55

   29 assign_statement: _ID _ASSIGN . num_exp _SEMI

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 70
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 56

   50 postinc_var: _ID _POSTINC .

    $default  reduce using rule 50 (postinc_var)


State 57

   55 switch_statement: _SWITCH _LSQBR . _ID _RSQBR $@6 switch_part

    _ID  shift, and go to state 71


State 58

   49 postinc_statement: postinc_var _SEMI .

    $default  reduce using rule 49 (postinc_statement)


State 59

   18 var_ids: _ID _ASSIGN . num_exp

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 72
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 60

   14 variable: _TYPE $@2 var_ids _SEMI .

    $default  reduce using rule 14 (variable)


State 61

   16 var_ids: var_ids _COMMA . _ID
   17        | var_ids _COMMA . _ID _ASSIGN num_exp

    _ID  shift, and go to state 73


State 62

   31 num_exp: num_exp . _OP exp
   46 relation: num_exp . _RELOP num_exp

    _OP     shift, and go to state 67
    _RELOP  shift, and go to state 74


State 63

   44 if_else_statement: _IF _LPAREN relation . _RPAREN statement
   45                  | _IF _LPAREN relation . _RPAREN statement _ELSE statement

    _RPAREN  shift, and go to state 75


State 64

   31 num_exp: num_exp . _OP exp
   36 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 76
    _OP      shift, and go to state 67


State 65

   40 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 77


State 66

   47 return_statement: _RETURN num_exp _SEMI .

    $default  reduce using rule 47 (return_statement)


State 67

   31 num_exp: num_exp _OP . exp

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    exp            go to state 78
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 68

   53 para_statement: _PARA _LPAREN _TYPE . _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _ID  shift, and go to state 79


State 69

   28 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (compound_statement)


State 70

   29 assign_statement: _ID _ASSIGN num_exp . _SEMI
   31 num_exp: num_exp . _OP exp

    _SEMI  shift, and go to state 80
    _OP    shift, and go to state 67


State 71

   55 switch_statement: _SWITCH _LSQBR _ID . _RSQBR $@6 switch_part

    _RSQBR  shift, and go to state 81


State 72

   18 var_ids: _ID _ASSIGN num_exp .
   31 num_exp: num_exp . _OP exp

    _OP  shift, and go to state 67

    $default  reduce using rule 18 (var_ids)


State 73

   16 var_ids: var_ids _COMMA _ID .
   17        | var_ids _COMMA _ID . _ASSIGN num_exp

    _ASSIGN  shift, and go to state 82

    $default  reduce using rule 16 (var_ids)


State 74

   46 relation: num_exp _RELOP . num_exp

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 83
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 75

   44 if_else_statement: _IF _LPAREN relation _RPAREN . statement
   45                  | _IF _LPAREN relation _RPAREN . statement _ELSE statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 84
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 76

   36 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 36 (exp)


State 77

   40 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    $default  reduce using rule 41 (argument)

    num_exp        go to state 85
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    argument       go to state 86
    postinc_var    go to state 52


State 78

   31 num_exp: num_exp _OP exp .

    $default  reduce using rule 31 (num_exp)


State 79

   53 para_statement: _PARA _LPAREN _TYPE _ID . $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    $default  reduce using rule 51 ($@4)

    $@4  go to state 87


State 80

   29 assign_statement: _ID _ASSIGN num_exp _SEMI .

    $default  reduce using rule 29 (assign_statement)


State 81

   55 switch_statement: _SWITCH _LSQBR _ID _RSQBR . $@6 switch_part

    $default  reduce using rule 54 ($@6)

    $@6  go to state 88


State 82

   17 var_ids: var_ids _COMMA _ID _ASSIGN . num_exp

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 89
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 83

   31 num_exp: num_exp . _OP exp
   46 relation: num_exp _RELOP num_exp .

    _OP  shift, and go to state 67

    $default  reduce using rule 46 (relation)


State 84

   44 if_else_statement: _IF _LPAREN relation _RPAREN statement .
   45                  | _IF _LPAREN relation _RPAREN statement . _ELSE statement

    _ELSE  shift, and go to state 90

    $default  reduce using rule 44 (if_else_statement)


State 85

   31 num_exp: num_exp . _OP exp
   42 argument: num_exp .

    _OP  shift, and go to state 67

    $default  reduce using rule 42 (argument)


State 86

   40 function_call: _ID $@3 _LPAREN argument . _RPAREN
   43 argument: argument . _COMMA num_exp

    _RPAREN  shift, and go to state 91
    _COMMA   shift, and go to state 92


State 87

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 . _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _ASSIGN  shift, and go to state 93


State 88

   55 switch_statement: _SWITCH _LSQBR _ID _RSQBR $@6 . switch_part

    _LBRACKET  shift, and go to state 94

    switch_part  go to state 95


State 89

   17 var_ids: var_ids _COMMA _ID _ASSIGN num_exp .
   31 num_exp: num_exp . _OP exp

    _OP  shift, and go to state 67

    $default  reduce using rule 17 (var_ids)


State 90

   45 if_else_statement: _IF _LPAREN relation _RPAREN statement _ELSE . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 96
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 91

   40 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 40 (function_call)


State 92

   43 argument: argument _COMMA . num_exp

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 97
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 93

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN . num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 98
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    postinc_var    go to state 52


State 94

   56 switch_part: _LBRACKET . cases _RBRACKET
   57            | _LBRACKET . cases _DEFAULT _COLON statement _RBRACKET

    _CASE  shift, and go to state 99

    cases  go to state 100
    case   go to state 101


State 95

   55 switch_statement: _SWITCH _LSQBR _ID _RSQBR $@6 switch_part .

    $default  reduce using rule 55 (switch_statement)


State 96

   45 if_else_statement: _IF _LPAREN relation _RPAREN statement _ELSE statement .

    $default  reduce using rule 45 (if_else_statement)


State 97

   31 num_exp: num_exp . _OP exp
   43 argument: argument _COMMA num_exp .

    _OP  shift, and go to state 67

    $default  reduce using rule 43 (argument)


State 98

   31 num_exp: num_exp . _OP exp
   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp . _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _SEMI  shift, and go to state 102
    _OP    shift, and go to state 67


State 99

   60 case: _CASE . literal case_part

    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    literal  go to state 103


State 100

   56 switch_part: _LBRACKET cases . _RBRACKET
   57            | _LBRACKET cases . _DEFAULT _COLON statement _RBRACKET
   59 cases: cases . case

    _RBRACKET  shift, and go to state 104
    _DEFAULT   shift, and go to state 105
    _CASE      shift, and go to state 99

    case  go to state 106


State 101

   58 cases: case .

    $default  reduce using rule 58 (cases)


State 102

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI . relation _SEMI _ID _POSTINC _RPAREN $@5 statement

    _LPAREN    shift, and go to state 43
    _ID        shift, and go to state 45
    _INT_NUM   shift, and go to state 46
    _UINT_NUM  shift, and go to state 47

    num_exp        go to state 62
    exp            go to state 49
    literal        go to state 50
    function_call  go to state 51
    relation       go to state 107
    postinc_var    go to state 52


State 103

   60 case: _CASE literal . case_part

    _COLON  shift, and go to state 108

    case_part  go to state 109


State 104

   56 switch_part: _LBRACKET cases _RBRACKET .

    $default  reduce using rule 56 (switch_part)


State 105

   57 switch_part: _LBRACKET cases _DEFAULT . _COLON statement _RBRACKET

    _COLON  shift, and go to state 110


State 106

   59 cases: cases case .

    $default  reduce using rule 59 (cases)


State 107

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation . _SEMI _ID _POSTINC _RPAREN $@5 statement

    _SEMI  shift, and go to state 111


State 108

   61 case_part: _COLON . statement
   62          | _COLON . statement _FINISH _SEMI

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 112
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 109

   60 case: _CASE literal case_part .

    $default  reduce using rule 60 (case)


State 110

   57 switch_part: _LBRACKET cases _DEFAULT _COLON . statement _RBRACKET

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 113
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 111

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI . _ID _POSTINC _RPAREN $@5 statement

    _ID  shift, and go to state 114


State 112

   61 case_part: _COLON statement .
   62          | _COLON statement . _FINISH _SEMI

    _FINISH  shift, and go to state 115

    $default  reduce using rule 61 (case_part)


State 113

   57 switch_part: _LBRACKET cases _DEFAULT _COLON statement . _RBRACKET

    _RBRACKET  shift, and go to state 116


State 114

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID . _POSTINC _RPAREN $@5 statement

    _POSTINC  shift, and go to state 117


State 115

   62 case_part: _COLON statement _FINISH . _SEMI

    _SEMI  shift, and go to state 118


State 116

   57 switch_part: _LBRACKET cases _DEFAULT _COLON statement _RBRACKET .

    $default  reduce using rule 57 (switch_part)


State 117

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC . _RPAREN $@5 statement

    _RPAREN  shift, and go to state 119


State 118

   62 case_part: _COLON statement _FINISH _SEMI .

    $default  reduce using rule 62 (case_part)


State 119

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN . $@5 statement

    $default  reduce using rule 52 ($@5)

    $@5  go to state 120


State 120

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 . statement

    _IF        shift, and go to state 24
    _RETURN    shift, and go to state 25
    _PARA      shift, and go to state 26
    _LBRACKET  shift, and go to state 27
    _ID        shift, and go to state 29
    _SWITCH    shift, and go to state 30

    statement           go to state 121
    compound_statement  go to state 32
    assign_statement    go to state 33
    if_else_statement   go to state 34
    return_statement    go to state 35
    postinc_statement   go to state 36
    postinc_var         go to state 37
    para_statement      go to state 38
    switch_statement    go to state 39


State 121

   53 para_statement: _PARA _LPAREN _TYPE _ID $@4 _ASSIGN num_exp _SEMI relation _SEMI _ID _POSTINC _RPAREN $@5 statement .

    $default  reduce using rule 53 (para_statement)
