Terminals unused in grammar

    _FUNCTION


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: %empty
    7          | _TYPE _ID

    8 body: _LBRACKET variable_list statement_list _RBRACKET

    9 variable_list: %empty
   10              | variable_list variable

   11 $@2: %empty

   12 variable: _TYPE $@2 var_ids _SEMI

   13 var_ids: _ID
   14        | var_ids _COMMA _ID

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assign_statement
   19          | if_else_statement
   20          | return_statement
   21          | postinc_statement

   22 compound_statement: _LBRACKET statement_list _RBRACKET

   23 assign_statement: _ID _ASSIGN num_exp _SEMI

   24 num_exp: exp
   25        | num_exp _OP exp

   26 exp: literal
   27    | postinc_var
   28    | function_call
   29    | _ID
   30    | _LPAREN num_exp _RPAREN

   31 literal: _INT_NUM
   32        | _UINT_NUM

   33 $@3: %empty

   34 function_call: _ID $@3 _LPAREN argument _RPAREN

   35 argument: %empty
   36         | num_exp

   37 if_else_statement: _IF _LPAREN relation _RPAREN statement
   38                  | _IF _LPAREN relation _RPAREN statement _ELSE statement

   39 relation: num_exp _RELOP num_exp

   40 return_statement: _RETURN num_exp _SEMI

   41 postinc_statement: postinc_var _SEMI

   42 postinc_var: _ID _POSTINC


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _FUNCTION (259)
    _IF (260) 37 38
    _ELSE (261) 38
    _RETURN (262) 40
    _LPAREN (263) 5 30 34 37 38
    _RPAREN (264) 5 30 34 37 38
    _LBRACKET (265) 8 22
    _RBRACKET (266) 8 22
    _SEMI (267) 12 23 40 41
    _ASSIGN (268) 23
    _COMMA (269) 14
    _POSTINC (270) 42
    _OP <i> (271) 25
    _RELOP <i> (272) 39
    _ID <s> (273) 5 7 13 14 23 29 34 42
    _INT_NUM <s> (274) 31
    _UINT_NUM <s> (275) 32
    ONLY_IF (276)


Nonterminals, with rules where they appear

    $accept (22)
        on left: 0
    program (23)
        on left: 1
        on right: 0
    function_list (24)
        on left: 2 3
        on right: 1 3
    function (25)
        on left: 5
        on right: 2 3
    $@1 (26)
        on left: 4
        on right: 5
    parameter (27)
        on left: 6 7
        on right: 5
    body (28)
        on left: 8
        on right: 5
    variable_list (29)
        on left: 9 10
        on right: 8 10
    variable (30)
        on left: 12
        on right: 10
    $@2 (31)
        on left: 11
        on right: 12
    var_ids (32)
        on left: 13 14
        on right: 12 14
    statement_list (33)
        on left: 15 16
        on right: 8 16 22
    statement (34)
        on left: 17 18 19 20 21
        on right: 16 37 38
    compound_statement (35)
        on left: 22
        on right: 17
    assign_statement (36)
        on left: 23
        on right: 18
    num_exp <i> (37)
        on left: 24 25
        on right: 23 25 30 36 39 40
    exp <i> (38)
        on left: 26 27 28 29 30
        on right: 24 25
    literal <i> (39)
        on left: 31 32
        on right: 26
    function_call <i> (40)
        on left: 34
        on right: 28
    $@3 (41)
        on left: 33
        on right: 34
    argument <i> (42)
        on left: 35 36
        on right: 34
    if_else_statement (43)
        on left: 37 38
        on right: 19
    relation <i> (44)
        on left: 39
        on right: 37 38
    return_statement (45)
        on left: 40
        on right: 20
    postinc_statement (46)
        on left: 41
        on right: 21
    postinc_var <i> (47)
        on left: 42
        on right: 27 41


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE . _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID .

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 9 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 5 (function)


State 16

    8 body: _LBRACKET variable_list . statement_list _RBRACKET
   10 variable_list: variable_list . variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 15 (statement_list)

    variable        go to state 18
    statement_list  go to state 19


State 17

   12 variable: _TYPE . $@2 var_ids _SEMI

    $default  reduce using rule 11 ($@2)

    $@2  go to state 20


State 18

   10 variable_list: variable_list variable .

    $default  reduce using rule 10 (variable_list)


State 19

    8 body: _LBRACKET variable_list statement_list . _RBRACKET
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _RBRACKET  shift, and go to state 24
    _ID        shift, and go to state 25

    statement           go to state 26
    compound_statement  go to state 27
    assign_statement    go to state 28
    if_else_statement   go to state 29
    return_statement    go to state 30
    postinc_statement   go to state 31
    postinc_var         go to state 32


State 20

   12 variable: _TYPE $@2 . var_ids _SEMI

    _ID  shift, and go to state 33

    var_ids  go to state 34


State 21

   37 if_else_statement: _IF . _LPAREN relation _RPAREN statement
   38                  | _IF . _LPAREN relation _RPAREN statement _ELSE statement

    _LPAREN  shift, and go to state 35


State 22

   40 return_statement: _RETURN . num_exp _SEMI

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    num_exp        go to state 40
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    postinc_var    go to state 44


State 23

   22 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 45


State 24

    8 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 8 (body)


State 25

   23 assign_statement: _ID . _ASSIGN num_exp _SEMI
   42 postinc_var: _ID . _POSTINC

    _ASSIGN   shift, and go to state 46
    _POSTINC  shift, and go to state 47


State 26

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 27

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 28

   18 statement: assign_statement .

    $default  reduce using rule 18 (statement)


State 29

   19 statement: if_else_statement .

    $default  reduce using rule 19 (statement)


State 30

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 31

   21 statement: postinc_statement .

    $default  reduce using rule 21 (statement)


State 32

   41 postinc_statement: postinc_var . _SEMI

    _SEMI  shift, and go to state 48


State 33

   13 var_ids: _ID .

    $default  reduce using rule 13 (var_ids)


State 34

   12 variable: _TYPE $@2 var_ids . _SEMI
   14 var_ids: var_ids . _COMMA _ID

    _SEMI   shift, and go to state 49
    _COMMA  shift, and go to state 50


State 35

   37 if_else_statement: _IF _LPAREN . relation _RPAREN statement
   38                  | _IF _LPAREN . relation _RPAREN statement _ELSE statement

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    num_exp        go to state 51
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    relation       go to state 52
    postinc_var    go to state 44


State 36

   30 exp: _LPAREN . num_exp _RPAREN

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    num_exp        go to state 53
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    postinc_var    go to state 44


State 37

   29 exp: _ID .
   34 function_call: _ID . $@3 _LPAREN argument _RPAREN
   42 postinc_var: _ID . _POSTINC

    _POSTINC  shift, and go to state 47

    _LPAREN   reduce using rule 33 ($@3)
    $default  reduce using rule 29 (exp)

    $@3  go to state 54


State 38

   31 literal: _INT_NUM .

    $default  reduce using rule 31 (literal)


State 39

   32 literal: _UINT_NUM .

    $default  reduce using rule 32 (literal)


State 40

   25 num_exp: num_exp . _OP exp
   40 return_statement: _RETURN num_exp . _SEMI

    _SEMI  shift, and go to state 55
    _OP    shift, and go to state 56


State 41

   24 num_exp: exp .

    $default  reduce using rule 24 (num_exp)


State 42

   26 exp: literal .

    $default  reduce using rule 26 (exp)


State 43

   28 exp: function_call .

    $default  reduce using rule 28 (exp)


State 44

   27 exp: postinc_var .

    $default  reduce using rule 27 (exp)


State 45

   16 statement_list: statement_list . statement
   22 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _RBRACKET  shift, and go to state 57
    _ID        shift, and go to state 25

    statement           go to state 26
    compound_statement  go to state 27
    assign_statement    go to state 28
    if_else_statement   go to state 29
    return_statement    go to state 30
    postinc_statement   go to state 31
    postinc_var         go to state 32


State 46

   23 assign_statement: _ID _ASSIGN . num_exp _SEMI

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    num_exp        go to state 58
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    postinc_var    go to state 44


State 47

   42 postinc_var: _ID _POSTINC .

    $default  reduce using rule 42 (postinc_var)


State 48

   41 postinc_statement: postinc_var _SEMI .

    $default  reduce using rule 41 (postinc_statement)


State 49

   12 variable: _TYPE $@2 var_ids _SEMI .

    $default  reduce using rule 12 (variable)


State 50

   14 var_ids: var_ids _COMMA . _ID

    _ID  shift, and go to state 59


State 51

   25 num_exp: num_exp . _OP exp
   39 relation: num_exp . _RELOP num_exp

    _OP     shift, and go to state 56
    _RELOP  shift, and go to state 60


State 52

   37 if_else_statement: _IF _LPAREN relation . _RPAREN statement
   38                  | _IF _LPAREN relation . _RPAREN statement _ELSE statement

    _RPAREN  shift, and go to state 61


State 53

   25 num_exp: num_exp . _OP exp
   30 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 62
    _OP      shift, and go to state 56


State 54

   34 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 63


State 55

   40 return_statement: _RETURN num_exp _SEMI .

    $default  reduce using rule 40 (return_statement)


State 56

   25 num_exp: num_exp _OP . exp

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    exp            go to state 64
    literal        go to state 42
    function_call  go to state 43
    postinc_var    go to state 44


State 57

   22 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 22 (compound_statement)


State 58

   23 assign_statement: _ID _ASSIGN num_exp . _SEMI
   25 num_exp: num_exp . _OP exp

    _SEMI  shift, and go to state 65
    _OP    shift, and go to state 56


State 59

   14 var_ids: var_ids _COMMA _ID .

    $default  reduce using rule 14 (var_ids)


State 60

   39 relation: num_exp _RELOP . num_exp

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    num_exp        go to state 66
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    postinc_var    go to state 44


State 61

   37 if_else_statement: _IF _LPAREN relation _RPAREN . statement
   38                  | _IF _LPAREN relation _RPAREN . statement _ELSE statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _ID        shift, and go to state 25

    statement           go to state 67
    compound_statement  go to state 27
    assign_statement    go to state 28
    if_else_statement   go to state 29
    return_statement    go to state 30
    postinc_statement   go to state 31
    postinc_var         go to state 32


State 62

   30 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 30 (exp)


State 63

   34 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _LPAREN    shift, and go to state 36
    _ID        shift, and go to state 37
    _INT_NUM   shift, and go to state 38
    _UINT_NUM  shift, and go to state 39

    $default  reduce using rule 35 (argument)

    num_exp        go to state 68
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    argument       go to state 69
    postinc_var    go to state 44


State 64

   25 num_exp: num_exp _OP exp .

    $default  reduce using rule 25 (num_exp)


State 65

   23 assign_statement: _ID _ASSIGN num_exp _SEMI .

    $default  reduce using rule 23 (assign_statement)


State 66

   25 num_exp: num_exp . _OP exp
   39 relation: num_exp _RELOP num_exp .

    _OP  shift, and go to state 56

    $default  reduce using rule 39 (relation)


State 67

   37 if_else_statement: _IF _LPAREN relation _RPAREN statement .
   38                  | _IF _LPAREN relation _RPAREN statement . _ELSE statement

    _ELSE  shift, and go to state 70

    $default  reduce using rule 37 (if_else_statement)


State 68

   25 num_exp: num_exp . _OP exp
   36 argument: num_exp .

    _OP  shift, and go to state 56

    $default  reduce using rule 36 (argument)


State 69

   34 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 71


State 70

   38 if_else_statement: _IF _LPAREN relation _RPAREN statement _ELSE . statement

    _IF        shift, and go to state 21
    _RETURN    shift, and go to state 22
    _LBRACKET  shift, and go to state 23
    _ID        shift, and go to state 25

    statement           go to state 72
    compound_statement  go to state 27
    assign_statement    go to state 28
    if_else_statement   go to state 29
    return_statement    go to state 30
    postinc_statement   go to state 31
    postinc_var         go to state 32


State 71

   34 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 34 (function_call)


State 72

   38 if_else_statement: _IF _LPAREN relation _RPAREN statement _ELSE statement .

    $default  reduce using rule 38 (if_else_statement)
